<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.base.mapper.PlcHikCommandMapper">
    
    <resultMap type="PlcHikCommand" id="PlcHikCommandResult">
        <result property="id"    column="id"    />
        <result property="plcHikId"    column="plc_hik_id"    />
        <result property="code"    column="code"    />
        <result property="name"    column="name"    />
        <result property="command"    column="command"    />
        <result property="sort"    column="sort"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectPlcHikCommandVo">
        select id, plc_hik_id, code, name, command, sort, create_by, create_time, update_by, update_time from plc_hik_command
    </sql>

    <select id="selectPlcHikCommandList" parameterType="PlcHikCommand" resultMap="PlcHikCommandResult">
        <include refid="selectPlcHikCommandVo"/>
        <where>  
            <if test="plcHikId != null "> and plc_hik_id = #{plcHikId}</if>
            <if test="code != null  and code != ''"> and code like concat('%', #{code}, '%')</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="command != null  and command != ''"> and command like concat('%', #{command}, '%')</if>
            <if test="sort != null "> and sort = #{sort}</if>
        </where>
    </select>
    
    <select id="selectPlcHikCommandById" parameterType="Long" resultMap="PlcHikCommandResult">
        <include refid="selectPlcHikCommandVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertPlcHikCommand" parameterType="PlcHikCommand">
        insert into plc_hik_command
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="plcHikId != null">plc_hik_id,</if>
            <if test="code != null">code,</if>
            <if test="name != null">name,</if>
            <if test="command != null">command,</if>
            <if test="sort != null">sort,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="plcHikId != null">#{plcHikId},</if>
            <if test="code != null">#{code},</if>
            <if test="name != null">#{name},</if>
            <if test="command != null">#{command},</if>
            <if test="sort != null">#{sort},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updatePlcHikCommand" parameterType="PlcHikCommand">
        update plc_hik_command
        <trim prefix="SET" suffixOverrides=",">
            <if test="plcHikId != null">plc_hik_id = #{plcHikId},</if>
            <if test="code != null">code = #{code},</if>
            <if test="name != null">name = #{name},</if>
            <if test="command != null">command = #{command},</if>
            <if test="sort != null">sort = #{sort},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deletePlcHikCommandById" parameterType="Long">
        delete from plc_hik_command where id = #{id}
    </delete>

    <delete id="deletePlcHikCommandByIds" parameterType="String">
        delete from plc_hik_command where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="existPlcHikCommand" resultMap="PlcHikCommandResult">
        <include refid="selectPlcHikCommandVo"/>
        where plc_hik_id = #{plcHikId}
        and code = #{code}
    </select>

    <delete id="deletePlcHikCommandByPlcHikId" parameterType="Long">
        delete from plc_hik_command where plc_hik_id = #{plcHikId}
    </delete>
</mapper>